<?xml version="1.0" encoding="UTF-8"?>
<beans:beans xmlns="http://www.springframework.org/schema/mvc"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:beans="http://www.springframework.org/schema/beans"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xsi:schemaLocation="http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd
		http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-4.3.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-4.3.xsd">

	<!-- DispatcherServlet Context: defines this servlet's request-processing 
		infrastructure -->

	<!-- Enables the Spring MVC @Controller programming model -->
	<annotation-driven />

	<!-- Handles HTTP GET requests for /resources/** by efficiently serving 
		up static resources in the ${webappRoot}/resources directory -->
	<resources mapping="/resources/**" location="/resources/" />
	<resources location="/WEB-INF/views/include/" mapping="/include/**" />
	<resources location="/WEB-INF/views/images/" mapping="/images/**" />
	<resources location="/WEB-INF/views/json/" mapping="/json/**" />
	<resources location="/WEB-INF/views/ckeditor/" mapping="/ckeditor/**" />
	<resources location="/WEB-INF/views/summernote/" mapping="/summernote/**" />
	<!-- Resolves views selected for rendering by @Controllers to .jsp resources 
		in the /WEB-INF/views directory -->
	<beans:bean
		class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<beans:property name="prefix" value="/WEB-INF/views/" />
		<beans:property name="suffix" value=".jsp" />
	</beans:bean>
	<!-- 스프링 빈을 태그로 등록하지 않고 자동으로 검색(auto scan) -->
	<context:component-scan base-package="com.example.spring02" />

	<!-- 파일 업로드 관련 설정 -->
	<beans:bean id="mulitpartResolver"
		class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
		<!-- 파일업로드 용량 -->
		<beans:property name="maxUploadSize" value="10485760" />
	</beans:bean>
	<!-- 파일업로드를 위한 디렉토리 설정 -->
	<!-- String uploadPath = new String("업로드 경로") -->
	<beans:bean id="uploadPath" class="java.lang.String">
		<!-- 파일업로드 디렉토리 -->
		<beans:constructor-arg value="d:/Spring/upload" />
	</beans:bean>
	<!-- aop의 설정을 통해
	proxy 객체를 자동으로 생성하도록 설정 -->
	<aop:aspectj-autoproxy></aop:aspectj-autoproxy>
	<!-- 인터셉터 빈 선언 -->
	<beans:bean id="sampleInterceptor" class="com.example.spring02.interceptor.SampleInterceptor" />
	<beans:bean id="loginInterceptor" class="com.example.spring02.interceptor.LoginInterceptor"/>
	<beans:bean id="adminInterceptor" class="com.example.spring02.interceptor.AdminInterceptor"/>
	<!-- 인터셉터를 적용할 url 설정 -->
		<interceptors>
			<interceptor>
				<mapping path="/memo/list.do"/>
				<mapping path="/shop/**"/>
				<mapping path="/message/*"/>
				<!-- 인터셉터의 id -->
				<beans:ref bean="sampleInterceptor"/>
			</interceptor>
	<!-- 로그인 체크를 위한 인터셉터 mapping -->
			<interceptor>
				<mapping path="/board/write.do"/>
				<mapping path="/board/insert.do"/>
				<mapping path="/board/update.do"/>
				<mapping path="/board/delete.do"/>
				<mapping path="/shop/cart/insert.do"/>
				<mapping path="/shop/cart/list.do"/>
				<beans:ref bean="loginInterceptor"/>
			</interceptor>
	<!-- 관리자 세션 체크를 위한 인터셉터 mapping -->
			<interceptor>
				<mapping path="/shop/product/write.do"/>
				<mapping path="/shop/product/list.do"/>
				<mapping path="/shop/product/delete.do"/>
				<beans:ref bean="adminInterceptor"/>
			</interceptor>
		</interceptors>
	</beans:beans>
